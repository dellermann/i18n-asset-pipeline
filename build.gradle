/*
 *
 *  * Copyrights 2002-2016 Webb Fontaine
 *  * Date: 18/08/2017
 *  * This software is the proprietary information of Webb Fontaine.
 *  * Its use is subject to License terms.
 *
 */


buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.gradle.publish:plugin-publish-plugin:0.9.7'
    }
}

allprojects {
    version '3.0.0'
    group 'com.webbfontaine.grails.plugins'

}

subprojects { p ->
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'groovy'

    plugins.withType(JavaPlugin) {
        sourceCompatibility = 1.8
    }

    plugins.withType(GroovyPlugin) {
        groovydoc {
            docTitle = "I18n asset pipeline API v${version}"
            windowTitle = "I18n asset pipeline API v${version}"
        }

    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.grails.org/grails/core' }
    }

    ext {
        versions = [asset: '2.14.3', groovy: '2.4.11']
    }

    dependencies {
        //The version is mandatory because the dependencies wont be inside the pom
        compile "org.grails:grails-core:$grailsVersion"
    }


    if(!p.name.endsWith('-grails')){
        apply plugin: 'com.jfrog.bintray'
        apply plugin: 'com.gradle.plugin-publish'
        apply plugin: 'maven'
        apply plugin: 'maven-publish'
        publishing {
            publications {
                maven(MavenPublication) {
                    groupId p.group
                    artifactId p.name
                    pom.withXml {
                        asNode().children().last() + {
                            resolveStrategy = Closure.DELEGATE_FIRST
                            name p.name
                            description 'I18n asset-pipeline plugin'
                            url 'https://github.com/webbfontaine/i18n-asset-pipeline'
                            scm {
                                url 'https://github.com/webbfontaine/i18n-asset-pipeline'
                            }
                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'dellermann'
                                    name 'Daniel Ellermann'
                                }
                                developer {
                                    id 'anthonymoreira'
                                    name 'Anthony Moreira'
                                }
                                developer {
                                    id 'tarikchrouki'
                                    name 'Tarik Chrouki'
                                }
                            }
                        }
                    }
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar
                }
            }
        }

        bintray {
            user = project.hasProperty('bintrayUser')    \
           ? project.property('bintrayUser')
                    : System.getenv('BINTRAY_USER')
            key = project.hasProperty('bintrayApiKey')    \
           ? project.property('bintrayApiKey')
                    : System.getenv('BINTRAY_API_KEY')
            publish=true
            publications = ['maven']
            pkg {
                repo = 'i18n-asset-pipeline'
                userOrg = 'webbfontaine'
                name = p.name
                licenses = ['Apache-2.0']
                vcsUrl = 'https://github.com/webbfontaine/i18n-asset-pipeline.git'
                version {
                    name = p.version
                }
            }
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from 'build/docs/javadoc'
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }
        artifacts {
            archives javadocJar
            archives sourcesJar
        }

    }

}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
